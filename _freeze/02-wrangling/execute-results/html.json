{
  "hash": "bbf457c15afe640618cdd0542bc731ea",
  "result": {
    "markdown": "# Data wrangling {#sec-wrangling}\n\nhttps://allisonhorst.com/r-packages-functions\n\n## Data Wrangling\n\nThe basic ones are the **Wickham 6** that you've encountered already last year\n\ntable of the Wickham 6 refer them back to the different chapters where they encountered it in level 1\n\n| Function    | Description                                                | First introduced in Level 1 Chapter                                                                                               |\n|:-----------------|:----------------------------------|:------------------|\n| select()    | Include or exclude certain variables (columns)             | [Chapter 6.5](https://psyteachr.github.io/data-skills-v2/corsi-blocks-2.html#activity-3-selecting-variables){target=\"_blank\"}     |\n| filter()    | Include or exclude certain observations/data (rows)        | [Chapter 6.6](https://psyteachr.github.io/data-skills-v2/corsi-blocks-2.html#activity-4-filtering-observations){target=\"_blank\"}  |\n| mutate()    | Creates new variables (columns)                            | [Chapter 8.8](https://psyteachr.github.io/data-skills-v2/belonging-2.html?q=mutate#activity-5-mutate-and-recode){target=\"_blank\"} |\n| arrange()   | Changes the order of observations (rows)                   | not yet introduced                                                                                                                |\n| group_by()  | Organises the observations (rows) into groups              | [Chapter 3.5.3](https://psyteachr.github.io/data-skills-v2/stroop-2.html#summarising-by-groups){target=\"_blank\"}                  |\n| summarise() | Create summary variables for groups of observations (rows) | [Chapter 3.5.2](https://psyteachr.github.io/data-skills-v2/stroop-2.html#calculating-summary-statistics){target=\"_blank\"}         |\n\n### Brief recap of the Wickham 6\n\n#### select\n\nMassive dataframes use a lot of computing power - to reduce that, it would be worth focussing on the columns you need\n\nselecting variables - you can rename them too if you don't like the column name as is\n\nif you wanna rename something at a later stage, use rename. Works in the same manner as select as in new name = old name. --\\> This could be in an information box\n\ndeselecting deselecting multiple variables\n\n#### filter\n\ntext - one condition vs more than one condition numbers - smaller/ larger\n\n#### arrange\n\nascending, descending - NAs will always listed at the end regardless\n\nfactors - sorting data in a preferred way\n\n#### mutate\n\nAllison's drawing\n\n#### group_by & summarise\n\n## Tidy data\n\ncopied from Lisa\n\n## Data types and what are observations/ variables\n\n::: callout-caution\n## Do not factor numbers\n\nIf you factor numeric data, it gets converted to the integers 1 to the number of unique values, no matter what the values are. Additionally, you can no longer use the values as numbers, such as calculating the mean.\n\n\n::: {.cell layout-align=\"center\" filename='Example'}\n\n```{.r .cell-code}\nx <- c(-3, 0, .5)  # numeric vector\nf <- factor(x)     # convert to factor\nx == as.numeric(f) # does not convert back to numeric \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE FALSE FALSE\n```\n:::\n:::\n\n::: {.cell layout-align=\"center\" filename='You cannot average a factor'}\n\n```{.r .cell-code}\nm <- mean(f)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in mean.default(f): argument is not numeric or logical: returning NA\n```\n:::\n:::\n\n:::\n\nSometimes people represent categorical variables with numbers that correspond to names, like 0 = \"no\" and 1 = \"yes\", but values in between don't have a clear interpretation. If you have control over how the data are recorded, it's better to use the character names for clarity. You'll learn how to recode columns in @sec-wrangle.\n\n### Knitting\n\nas a means to check if the file as a whole is running\n\n\n\n\n\n\n\n\n\n\n## Other useful functions\n\n### count\n\n### joining things together from separate datasets\n\n**inner_join**\n\n**full_join**\n\nUse the 2 chopped up tables earlier and merge them. They have no values overlapping, so it's difficult\n\n## Tidy data\n\n### pivoting data\n\npivot_wider and pivot_longer\n\n### recode\n\n### case_when\n\nAllison's drawing\n\n## [Pair-coding in the lab]{style=\"color: #EBA347; text-transform: uppercase;\"} {.unnumbered}\n\n## [Test your knowledge and challenge yourself]{style=\"color: #EBA347; text-transform: uppercase;\"} {.unnumbered}\n\nor for the Wickham 6 part, we could just go here is some data, lets apply them all.\n\nActivity 1: selecting specific columns First of all, we want to select the relevant columns\n\n\n## separate\n\n## calculating percentages from the included pre-reg\n\nalready calculated for Time 2 - put the average scores back in\n",
    "supporting": [
      "02-wrangling_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}