{
  "hash": "c35d181cb1ef77d205915de9d6847a20",
  "result": {
    "markdown": "# Data viz {#sec-dataviz}\n\n## Intended Learning Outcomes {.unnumbered}\n\nBy the end of this chapter you should be able to:\n\n-   a\n-   b\n-   Be able to create an appropriate for your data\n\n\n## Activity 1: Set-up\n\n-   Create a new project and name it something meaningful (e.g., \"2A_chapter3\", or \"03_data_viz\")\n-   Create a new Rmd and save it to your project folder. Name it something meaningful (e.g., \"chapter_03\", \"03_data_viz.Rmd\")\n-   Delete everything below line 12 (keep the set-up code chunk)\n-   Download the data for today: [data_ch3](data/data_ch3.zip \"download\"). There are 2 csv files contained in the zip-folder you just downloaded. One is the data file (`hp_data_modified.csv`) and the other is the `questionnaire_codebook` for the main 3 questionnaires used in the dataset.\n-   Unzip the zip folder so that all data files, the Rmd and the project are in the same folder (see image below)\n\nIf you set it up correctly, your folder should look like this:\n\n::: {#img-data-viz layout-ncol=2}\n\n![Folder on your computer (left)](images/data_viz_setup.PNG) \n\n![Files pane in RStudio (right)](images/files_plane_data_viz.PNG)\n\n:::\n\n#### Info about the data {.unnumbered}\n\n\n**citation**\n\n\n**Abstract**\n\n\n## Activity 2: Load in the libraries and read in the data\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n## packages \nlibrary(tidyverse)\n\n## data\nhp_data <- read_csv(\"hp_data_modified.csv\")\ncodebook <- read_csv(\"questionnaire_codebook.csv\")\n```\n:::\n\n\n\n\n\n#### Familiarise yourself with the data structure {.unnumbered}\n\nOr as we said in @sec-, you could \n\nAs we said in **chapter 1** (LINK TO THAT), it is always recommended to glimpse at the data to see how many variables and observations there are in the dataset and what kind of data type they are.\n\nFor example, to show the codebook, we would use:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nglimpse(codebook)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 134\nColumns: 5\n$ Questionnaire_Item               <chr> \"IPIP_01\", \"IPIP_02\", \"IPIP_03\", \"IPI…\n$ Statement                        <chr> \"Am the life of the party.\", \"Feel li…\n$ Dimension                        <chr> \"Extraversion\", \"Agreeableness\", \"Con…\n$ `Forward- or Reverse-coded item` <chr> \"Forward\", \"Reverse\", \"Forward\", \"Rev…\n$ Scoring                          <chr> \"Forward:\\n1 = Very inaccurate\\n2 = M…\n```\n:::\n:::\n\n\n\n::: {.callout-note collapse=\"true\"}\n## Try the same for `hp_data`. Click to see the solution.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nglimpse(hp_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 988\nColumns: 159\n$ PP_ID                <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15…\n$ books                <chr> \"Harry Potter and the Philosopher's Stone,Harry P…\n$ language_books       <chr> \"English\", \"German and English\", \"Both English an…\n$ movies               <chr> \"Harry Potter and the Philosopher's Stone,Harry P…\n$ language_movies      <chr> \"English\", \"German and English\", \"Both English an…\n$ Sorting_completed_YN <chr> \"Yes\", \"No\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"No\", \"Y…\n$ Sorting_house        <chr> \"Ravenclaw\", \"Gryffindor\", \"Gryffindor\", \"Slyther…\n$ Sorting_house_wish   <chr> \"Ravenclaw\", \"Ravenclaw\", \"Ravenclaw\", \"Slytherin…\n$ age                  <dbl> 21, 22, 27, 21, 20, 27, 26, 29, 23, 24, 25, 33, 2…\n$ country              <chr> \"Germany\", \"Germany\", \"France\", \"Norway\", \"Chile\"…\n$ language             <chr> \"german\", \"German\", \"French\", \"Norwegian\", \"Spani…\n$ occupation           <chr> \"Student\", \"Student\", \"Employed\", \"Student\", \"Stu…\n$ gender               <chr> \"Female\", \"Female\", \"Female\", \"Male\", \"Female\", \"…\n$ Bravery              <chr> \"Gryffindor\", \"Gryffindor\", \"Gryffindor\", \"Gryffi…\n$ Hardwork             <chr> \"Ravenclaw\", \"Ravenclaw\", \"Hufflepuff\", \"Hufflepu…\n$ Intelligence         <chr> \"Ravenclaw\", \"Ravenclaw\", \"Ravenclaw\", \"Ravenclaw…\n$ Ambition             <chr> \"Slytherin\", \"Slytherin\", \"Slytherin\", \"Slytherin…\n$ Daring               <chr> \"Gryffindor\", \"Hufflepuff\", \"Gryffindor\", \"Gryffi…\n$ Dedication           <chr> \"Ravenclaw\", \"Slytherin\", \"Hufflepuff\", \"Hufflepu…\n$ Knowledge            <chr> \"Ravenclaw\", \"Ravenclaw\", \"Ravenclaw\", \"Ravenclaw…\n$ Cunning              <chr> \"Slytherin\", \"Hufflepuff\", \"Slytherin\", \"Slytheri…\n$ Extraverted          <chr> \"Hufflepuff\", \"Hufflepuff\", \"Hufflepuff\", \"Gryffi…\n$ Agreeable            <chr> \"Hufflepuff\", \"Gryffindor\", \"Hufflepuff\", \"Huffle…\n$ Clever               <chr> \"Ravenclaw\", \"Ravenclaw\", \"Ravenclaw\", \"Ravenclaw…\n$ Manipulative         <chr> \"Slytherin\", \"Slytherin\", \"Slytherin\", \"Slytherin…\n$ IPIP_01              <chr> \"moderately accurate\", \"neither accurate nor inac…\n$ IPIP_02              <chr> \"very inaccurate\", \"moderately accurate\", \"very i…\n$ IPIP_03              <chr> \"moderately inaccurate\", \"very accurate\", \"modera…\n$ IPIP_04              <chr> \"moderately inaccurate\", \"neither accurate nor in…\n$ IPIP_05              <chr> \"very accurate\", \"moderately accurate\", \"very acc…\n$ IPIP_06              <chr> \"moderately inaccurate\", \"neither accurate nor in…\n$ IPIP_07              <chr> \"very accurate\", \"moderately inaccurate\", \"very a…\n$ IPIP_08              <chr> \"moderately accurate\", \"very inaccurate\", \"modera…\n$ IPIP_09              <chr> \"moderately accurate\", \"neither accurate nor inac…\n$ IPIP_10              <chr> \"very inaccurate\", \"very inaccurate\", \"very inacc…\n$ IPIP_11              <chr> \"moderately accurate\", \"moderately inaccurate\", \"…\n$ IPIP_12              <chr> \"very inaccurate\", \"moderately inaccurate\", \"very…\n$ IPIP_13              <chr> \"neither accurate nor inaccurate\", \"very accurate…\n$ IPIP_14              <chr> \"very inaccurate\", \"moderately accurate\", \"modera…\n$ IPIP_15              <chr> \"moderately accurate\", \"neither accurate nor inac…\n$ IPIP_16              <chr> \"neither accurate nor inaccurate\", \"moderately in…\n$ IPIP_17              <chr> \"moderately accurate\", \"neither accurate nor inac…\n$ IPIP_18              <chr> \"moderately inaccurate\", \"moderately inaccurate\",…\n$ IPIP_19              <chr> \"neither accurate nor inaccurate\", \"moderately in…\n$ IPIP_20              <chr> \"moderately inaccurate\", \"very inaccurate\", \"very…\n$ IPIP_21              <chr> \"very inaccurate\", \"moderately accurate\", \"modera…\n$ IPIP_22              <chr> \"moderately inaccurate\", \"moderately inaccurate\",…\n$ IPIP_23              <chr> \"very inaccurate\", \"moderately inaccurate\", \"very…\n$ IPIP_24              <chr> \"neither accurate nor inaccurate\", \"moderately in…\n$ IPIP_25              <chr> \"moderately accurate\", \"very accurate\", \"moderate…\n$ IPIP_26              <chr> \"very inaccurate\", \"moderately inaccurate\", \"mode…\n$ IPIP_27              <chr> \"moderately inaccurate\", \"moderately accurate\", \"…\n$ IPIP_28              <chr> \"moderately accurate\", \"moderately accurate\", \"ve…\n$ IPIP_29              <chr> \"moderately inaccurate\", \"moderately accurate\", \"…\n$ IPIP_30              <chr> \"very inaccurate\", \"moderately inaccurate\", \"very…\n$ IPIP_31              <chr> \"very inaccurate\", \"moderately accurate\", \"modera…\n$ IPIP_32              <chr> \"moderately inaccurate\", \"moderately inaccurate\",…\n$ IPIP_33              <chr> \"moderately inaccurate\", \"very accurate\", \"modera…\n$ IPIP_34              <chr> \"moderately inaccurate\", \"moderately inaccurate\",…\n$ IPIP_35              <chr> \"moderately accurate\", \"moderately accurate\", \"mo…\n$ IPIP_36              <chr> \"moderately accurate\", \"moderately inaccurate\", \"…\n$ IPIP_37              <chr> \"moderately accurate\", \"moderately accurate\", \"mo…\n$ IPIP_38              <chr> \"neither accurate nor inaccurate\", \"moderately in…\n$ IPIP_39              <chr> \"very inaccurate\", \"moderately inaccurate\", \"neit…\n$ IPIP_40              <chr> \"moderately accurate\", \"moderately accurate\", \"ve…\n$ IPIP_41              <chr> \"moderately inaccurate\", \"moderately accurate\", \"…\n$ IPIP_42              <chr> \"moderately accurate\", \"neither accurate nor inac…\n$ IPIP_43              <chr> \"moderately inaccurate\", \"moderately inaccurate\",…\n$ IPIP_44              <chr> \"moderately inaccurate\", \"moderately inaccurate\",…\n$ IPIP_45              <chr> \"very accurate\", \"moderately accurate\", \"very acc…\n$ IPIP_46              <chr> \"very accurate\", \"moderately inaccurate\", \"neithe…\n$ IPIP_47              <chr> \"moderately inaccurate\", \"moderately accurate\", \"…\n$ IPIP_48              <chr> \"moderately inaccurate\", \"moderately accurate\", \"…\n$ IPIP_49              <chr> \"moderately inaccurate\", \"moderately inaccurate\",…\n$ IPIP_50              <chr> \"moderately accurate\", \"moderately accurate\", \"ve…\n$ SD_M1                <dbl> 3, 4, 3, 4, 2, 3, 3, 3, 4, 2, 4, 3, 4, 4, 3, 4, 4…\n$ SD_M2                <dbl> 2, 3, 2, 5, 1, 2, 1, 2, 1, 2, 2, 4, 4, 4, 4, 2, 4…\n$ SD_M3                <dbl> 2, 3, 1, 4, 2, 2, 2, 3, 3, 2, 4, 1, 3, 2, 3, 3, 2…\n$ SD_M4                <dbl> 2, 2, 3, 4, 3, 3, 2, 4, 2, 2, 3, 4, 4, 4, 3, 2, 2…\n$ SD_M5                <dbl> 2, 2, 1, 4, 2, 2, 1, 1, 1, 1, 2, 1, 4, 3, 2, 2, 3…\n$ SD_M6                <dbl> 1, 3, 1, 5, 3, 3, 3, 4, 1, 2, 3, 1, 5, 1, 4, 3, 3…\n$ SD_M7                <dbl> 3, 5, 4, 5, 2, 5, 4, 4, 5, 2, 3, 1, 5, 4, 4, 5, 5…\n$ SD_M8                <dbl> 1, 3, 2, 2, 3, 1, 1, 3, 1, 2, 3, 1, 2, 1, 3, 1, 2…\n$ SD_M9                <dbl> 4, 4, 2, 4, 1, 4, 2, 2, 1, 3, 3, 1, 4, 5, 4, 1, 3…\n$ SD_N1                <dbl> 1, 3, 4, 4, 2, 3, 2, 1, 3, 3, 1, 1, 2, 2, 4, 3, 1…\n$ SD_N2                <dbl> 4, 1, 3, 3, 2, 3, 4, 4, 5, 3, 5, 5, 4, 2, 2, 5, 4…\n$ SD_N3                <dbl> 3, 2, 2, 2, 2, 2, 1, 3, 1, 1, 2, 1, 3, 2, 2, 1, 5…\n$ SD_N4                <dbl> 2, 2, 2, 1, 2, 2, 2, 5, 2, 1, 3, 1, 3, 1, 4, 1, 2…\n$ SD_N5                <dbl> 1, 2, 2, 4, 3, 2, 1, 4, 1, 3, 2, 1, 4, 2, 2, 1, 4…\n$ SD_N6                <dbl> 4, 1, 2, 4, 4, 4, 2, 5, 5, 3, 3, 1, 4, 1, 3, 4, 2…\n$ SD_N7                <dbl> 1, 3, 2, 3, 1, 1, 1, 4, 1, 3, 2, 1, 2, 4, 4, 1, 3…\n$ SD_N8                <dbl> 4, 3, 3, 2, 4, 3, 3, 4, 3, 4, 4, 3, 2, 2, 2, 4, 1…\n$ SD_N9                <dbl> 1, 4, 2, 4, 3, 2, 3, 2, 1, 4, 4, 1, 5, 2, 3, 3, 4…\n$ SD_P1                <dbl> 1, 3, 2, 2, 1, 1, 1, 1, 1, 1, 3, 1, 3, 1, 4, 2, 2…\n$ SD_P2                <dbl> 2, 3, 1, 4, 3, 4, 4, 4, 2, 2, 3, 3, 2, 2, 1, 3, 2…\n$ SD_P3                <dbl> 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 4, 2, 1…\n$ SD_P4                <dbl> 1, 2, 3, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 3, 1, 1…\n$ SD_P5                <dbl> 3, 4, 1, 4, 1, 2, 3, 4, 1, 3, 2, 1, 4, 4, 3, 1, 1…\n$ SD_P6                <dbl> 3, 3, 1, 4, 1, 2, 2, 2, 1, 1, 2, 1, 3, 1, 3, 2, 1…\n$ SD_P7                <dbl> 5, 5, 4, 1, 5, 5, 5, 5, 5, 2, 5, 5, 2, 5, 2, 5, 2…\n$ SD_P8                <dbl> 1, 1, 3, 2, 3, 2, 1, 3, 1, 2, 1, 1, 1, 1, 3, 3, 3…\n$ SD_P9                <dbl> 1, 2, 1, 3, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 4…\n$ PVQ_01               <dbl> 5, 5, 5, 5, 6, 6, 4, 6, 4, 4, 5, 5, 5, 6, 6, 4, 6…\n$ PVQ_02               <dbl> 2, 6, 2, 4, 5, 2, 4, 4, 2, 3, 4, 4, 6, 4, 4, 6, 6…\n$ PVQ_03               <dbl> 4, 6, 3, 5, 6, 4, 4, 5, 3, 4, 5, 4, 5, 3, 4, 4, 3…\n$ PVQ_04               <dbl> 2, 5, 4, 3, 3, 4, 5, 6, 5, 4, 5, 5, 4, 5, 4, 3, 2…\n$ PVQ_05               <dbl> 5, 5, 4, 3, 5, 5, 5, 6, 4, 5, 6, 6, 6, 5, 3, 5, 4…\n$ PVQ_06               <dbl> 1, 3, 2, 5, 3, 3, 2, 2, 1, 2, 2, 3, 3, 2, 3, 4, 4…\n$ PVQ_07               <dbl> 5, 5, 5, 3, 4, 5, 4, 5, 6, 4, 4, 4, 2, 5, 3, 5, 1…\n$ PVQ_08               <dbl> 3, 5, 4, 4, 6, 6, 3, 6, 2, 4, 6, 6, 3, 3, 2, 6, 3…\n$ PVQ_09               <dbl> 4, 4, 5, 2, 3, 4, 4, 3, 5, 3, 5, 2, 5, 3, 3, 6, 3…\n$ PVQ_10               <dbl> 4, 4, 6, 2, 5, 3, 4, 6, 4, 4, 5, 4, 4, 5, 6, 3, 5…\n$ PVQ_11               <dbl> 3, 6, 6, 6, 6, 6, 5, 5, 6, 5, 5, 6, 6, 6, 5, 4, 4…\n$ PVQ_12               <dbl> 1, 2, 1, 6, 2, 2, 2, 1, 1, 2, 3, 4, 3, 3, 1, 5, 3…\n$ PVQ_13               <dbl> 3, 5, 3, 5, 4, 4, 5, 5, 2, 3, 4, 4, 5, 5, 3, 6, 4…\n$ PVQ_14               <dbl> 5, 6, 5, 5, 6, 6, 6, 6, 4, 5, 6, 6, 6, 5, 6, 5, 4…\n$ PVQ_15               <dbl> 2, 3, 2, 2, 3, 4, 3, 5, 6, 4, 3, 2, 2, 2, 2, 2, 3…\n$ PVQ_16               <dbl> 4, 6, 5, 6, 6, 4, 5, 6, 5, 5, 5, 6, 6, 6, 6, 5, 5…\n$ PVQ_17               <dbl> 4, 6, 5, 6, 6, 4, 4, 6, 6, 5, 4, 5, 5, 6, 4, 4, 5…\n$ PVQ_18               <dbl> 1, 2, 2, 3, 2, 2, 2, 4, 1, 3, 2, 1, 1, 2, 2, 2, 4…\n$ PVQ_19               <dbl> 4, 4, 5, 4, 5, 6, 6, 5, 5, 3, 4, 5, 5, 6, 6, 3, 5…\n$ PVQ_20               <dbl> 1, 5, 1, 6, 2, 2, 2, 4, 1, 2, 3, 4, 5, 2, 2, 5, 4…\n$ PVQ_21               <dbl> 2, 3, 3, 0, 5, 4, 1, 0, 2, 4, 5, 0, 4, 1, 3, 6, 1…\n$ PVQ_22               <dbl> 5, 2, 3, 2, 2, 3, 3, 5, 6, 3, 4, 3, 4, 3, 2, 3, 1…\n$ PVQ_23               <dbl> 4, 5, 6, 5, 6, 5, 4, 5, 5, 5, 5, 6, 6, 6, 6, 4, 4…\n$ PVQ_24               <dbl> 2, 3, 2, 5, 2, 3, 4, 5, 4, 3, 3, 4, 5, 3, 3, 3, 4…\n$ PVQ_25               <dbl> 5, 5, 6, 6, 6, 6, 5, 5, 5, 5, 4, 6, 5, 5, 5, 5, 4…\n$ PVQ_26               <dbl> 3, 6, 3, 6, 4, 4, 5, 2, 1, 4, 5, 5, 6, 3, 5, 6, 4…\n$ PVQ_27               <dbl> 5, 6, 6, 6, 5, 5, 6, 5, 5, 5, 5, 5, 5, 6, 5, 5, 2…\n$ PVQ_28               <dbl> 3, 3, 6, 3, 5, 2, 2, 4, 4, 4, 5, 3, 4, 3, 6, 3, 2…\n$ PVQ_29               <dbl> 1, 4, 2, 5, 2, 2, 1, 1, 1, 2, 3, 3, 4, 4, 5, 4, 4…\n$ PVQ_30               <dbl> 3, 4, 5, 3, 5, 3, 4, 5, 4, 4, 5, 4, 5, 5, 4, 4, 5…\n$ PVQ_31               <dbl> 1, 3, 2, 3, 2, 4, 2, 4, 6, 2, 4, 1, 2, 2, 4, 5, 4…\n$ PVQ_32               <dbl> 4, 5, 3, 5, 5, 3, 3, 5, 5, 3, 4, 5, 5, 5, 5, 5, 5…\n$ PVQ_33               <dbl> 1, 2, 2, 3, 4, 3, 2, 2, 2, 2, 1, 2, 1, 3, 1, 1, 3…\n$ PVQ_34               <dbl> 4, 5, 6, 4, 6, 6, 5, 6, 5, 4, 5, 6, 6, 6, 5, 5, 5…\n$ PVQ_35               <dbl> 1, 5, 2, 3, 4, 2, 2, 2, 1, 4, 3, 4, 5, 3, 2, 6, 5…\n$ PVQ_36               <dbl> 5, 6, 4, 5, 6, 4, 5, 3, 3, 4, 4, 5, 5, 4, 5, 5, 5…\n$ PVQ_37               <dbl> 5, 5, 4, 3, 6, 5, 5, 6, 4, 5, 5, 6, 6, 6, 5, 6, 6…\n$ PVQ_38               <dbl> 5, 4, 5, 2, 5, 3, 6, 4, 6, 4, 5, 4, 4, 4, 3, 5, 4…\n$ PVQ_39               <dbl> 4, 5, 5, 3, 6, 5, 4, 6, 6, 4, 5, 6, 5, 6, 6, 4, 6…\n$ PVQ_40               <dbl> 1, 2, 2, 3, 3, 3, 2, 4, 1, 2, 2, 1, 2, 3, 1, 1, 4…\n$ PVQ_41               <dbl> 2, 2, 2, 4, 2, 3, 1, 2, 1, 2, 2, 3, 4, 4, 4, 3, 3…\n$ PVQ_42               <dbl> 1, 5, 2, 2, 2, 4, 4, 3, 6, 2, 2, 1, 2, 3, 2, 5, 2…\n$ PVQ_43               <dbl> 5, 5, 5, 4, 6, 5, 4, 4, 5, 4, 3, 5, 5, 5, 5, 5, 6…\n$ PVQ_44               <dbl> 1, 2, 1, 4, 2, 2, 1, 1, 1, 2, 1, 1, 3, 2, 1, 4, 1…\n$ PVQ_45               <dbl> 2, 3, 4, 2, 5, 6, 2, 5, 2, 4, 6, 6, 5, 3, 3, 6, 3…\n$ PVQ_46               <dbl> 4, 4, 3, 3, 6, 3, 3, 2, 3, 3, 4, 1, 4, 4, 5, 2, 3…\n$ PVQ_47               <dbl> 3, 4, 5, 4, 5, 5, 4, 4, 5, 5, 4, 5, 4, 4, 5, 1, 2…\n$ PVQ_48               <dbl> 4, 3, 5, 6, 4, 2, 2, 4, 6, 4, 4, 5, 6, 5, 5, 4, 4…\n$ PVQ_49               <dbl> 4, 5, 5, 5, 3, 3, 2, 4, 6, 4, 4, 3, 5, 5, 4, 6, 3…\n$ PVQ_50               <dbl> 3, 4, 2, 3, 4, 2, 2, 3, 1, 4, 4, 3, 3, 3, 1, 6, 3…\n$ PVQ_51               <dbl> 5, 2, 2, 2, 3, 3, 3, 3, 6, 3, 4, 4, 3, 4, 3, 3, 3…\n$ PVQ_52               <dbl> 4, 5, 4, 5, 6, 5, 5, 6, 4, 5, 5, 6, 5, 6, 3, 6, 4…\n$ PVQ_53               <dbl> 2, 3, 2, 4, 3, 3, 3, 2, 2, 3, 4, 3, 3, 2, 1, 4, 4…\n$ PVQ_54               <dbl> 3, 2, 3, 2, 3, 3, 4, 5, 4, 4, 4, 3, 3, 5, 5, 2, 3…\n$ PVQ_55               <dbl> 5, 5, 5, 5, 5, 6, 5, 4, 5, 5, 4, 4, 5, 5, 4, 4, 4…\n$ PVQ_56               <dbl> 4, 6, 5, 6, 6, 5, 5, 6, 5, 4, 5, 6, 5, 6, 6, 5, 4…\n$ PVQ_57               <dbl> 4, 6, 5, 5, 5, 4, 4, 6, 4, 4, 4, 5, 5, 4, 4, 5, 4…\n```\n:::\n:::\n\n\n:::\n\n\n::: {.callout-note .try}\n## Test your understanding\n\n\n\n\n\n\nHere is a small data table.\n\ncountry             | population      | island\n:-------------------|----------------:|:--------------\nNorthern Ireland    | 1,895,510       | Ireland\nWales               | 3,169,586       | Great Britain\nRepublic of Ireland | 4,937,786       | Ireland\nScotland            | 5,466,000       | Great Britain\nEngland             | 56,550,138      | Great Britain\n\n\n* What geom would you use to plot the population for each of the 5 countries? <select class='webex-select'><option value='blank'></option><option value='x'>geom_bar</option><option value='answer'>geom_col</option></select>\n\n::: {.cell layout-align=\"center\"}\n* What mapping would you use?  <div class='webex-radiogroup' id='radio_PNUSINGLCJ'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_PNUSINGLCJ\" value=\"answer\"></input> <span>aes(x = country, y = population)</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_PNUSINGLCJ\" value=\"x\"></input> <span>aes(x = population, y = country)</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_PNUSINGLCJ\" value=\"x\"></input> <span>aes(x = country)</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_PNUSINGLCJ\" value=\"x\"></input> <span>aes(x = island)</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_PNUSINGLCJ\" value=\"x\"></input> <span>aes(y = population)</span></label></div>\n:::\n\n* What geom would you use to plot the number of countries on each island? <select class='webex-select'><option value='blank'></option><option value='answer'>geom_bar</option><option value='x'>geom_col</option></select>\n\n::: {.cell layout-align=\"center\"}\n* What mapping would you use?  <div class='webex-radiogroup' id='radio_TXSTEMBWLU'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_TXSTEMBWLU\" value=\"x\"></input> <span>aes(x = country, y = population)</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_TXSTEMBWLU\" value=\"x\"></input> <span>aes(x = population, y = country)</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_TXSTEMBWLU\" value=\"x\"></input> <span>aes(x = country)</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_TXSTEMBWLU\" value=\"answer\"></input> <span>aes(x = island)</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_TXSTEMBWLU\" value=\"x\"></input> <span>aes(y = population)</span></label></div>\n:::\n\n:::\n\n\n\n\n## Building plots\n\n### \n\n\nThere are multiple approaches to data visualisation in R; in this course we will use the popular package <pkg>ggplot2</pkg>, which is part of the larger `tidyverse` collection of packages. A grammar of graphics (the \"gg\" in \"ggplot\") is a standardised way to describe the components of a graphic. <pkg>ggplot2</pkg> uses a layered grammar of graphics, in which plots are built up in a series of layers. It may be helpful to think about any picture as having multiple elements that sit semi-transparently over each other. A good analogy is old Disney movies where artists would create a background and then add moveable elements on top of the background via transparencies.\n\n@fig-layers displays the evolution of a simple scatterplot using this layered approach. First, the plot space is built (layer 1); the variables are specified (layer 2); the type of visualisation (known as a `geom`) that is desired for these variables is specified (layer 3) - in this case `geom_point()` is called to visualise individual data points; a second geom is added to include a line of best fit (layer 4), the axis labels are edited for readability (layer 5), and finally, a theme is applied to change the overall appearance of the plot (layer 6).\n\nImportantly, each layer is independent and independently customisable. For example, the size, colour and position of each component can be adjusted, or one could, for example, remove the first geom (the data points) to only visualise the line of best fit, simply by removing the layer that draws the data points (@fig-remove-layer). The use of layers makes it easy to build up complex plots step-by-step, and to adapt or extend plots from existing code.\n\n\n\n## Activity 3: Wrangling the data? \n\nNot sure that makes sense. Maybe just dive straight in with the plots\n\nQuick recap of continuous vs categorical data types \n\nCheck in this weeks dataset\n\nQuick quiz\n\n\n\n## data types\n\n### categorical\n\n### continuous\n\nlet them check the data type of a \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidyverse)\npets <- read_csv(\"https://psyteachr.github.io/reprores/data/pets.csv\", col_types = \"cffiid\")\nglimpse(pets)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 800\nColumns: 6\n$ id      <chr> \"S001\", \"S002\", \"S003\", \"S004\", \"S005\", \"S006\", \"S007\", \"S008\"…\n$ pet     <fct> dog, dog, dog, dog, dog, dog, dog, dog, dog, dog, dog, dog, do…\n$ country <fct> UK, UK, UK, UK, UK, UK, UK, UK, UK, UK, UK, UK, UK, UK, UK, UK…\n$ score   <int> 90, 107, 94, 120, 111, 110, 100, 107, 106, 109, 85, 110, 102, …\n$ age     <int> 6, 8, 2, 10, 4, 8, 9, 8, 6, 11, 5, 9, 1, 10, 7, 8, 1, 8, 5, 13…\n$ weight  <dbl> 19.78932, 20.01422, 19.14863, 19.56953, 21.39259, 21.31880, 19…\n```\n:::\n:::\n\n\n\n\n::: {.panel-tabset}\n\n## Layer 1\n\nLet's start with a totally empty plot layer created by the `ggplot()` function with no arguments.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot()\n```\n\n::: {.cell-output-display}\n![A plot base created by ggplot()](03-dataviz_files/figure-html/ggplot-empty-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Layer 2\n\nThe first argument to `ggplot()` is the `data` table you want to plot. Let's use the `pets` data we loaded above. The second argument is the `mapping` for which columns in your data table correspond to which properties of the plot, such as the `x`-axis, the `y`-axis, line `colour` or `linetype`, point `shape`, or object `fill`. These mappings are specified by the `aes()` function. Just adding this to the `ggplot` function creates the labels and ranges for the `x` and `y` axes. They usually have sensible default values, given your data, but we'll learn how to change them later.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data = pets, mapping = aes(x = pet, y = score, colour = country, fill = country))\n```\n\n::: {.cell-output-display}\n![Empty ggplot with x and y labels](03-dataviz_files/figure-html/ggplot-aes-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n::: callout-tip\nPeople usually omit the argument names and just put the `aes()` function directly as the second argument to `ggplot`. They also usually omit `x` and `y` as argument names to `aes()` (but you have to name the other properties). \n:::\n\n## Layer 3\n\nNext we can add \"geoms\", or plot styles. You literally add them with the `+` symbol. You can customise the appearance of a geom with arguments like `alpha` (sets transparency).\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(pets, aes(pet, score, colour = country, fill = country)) +\n  geom_violin(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![Violin plot with country represented by colour.](03-dataviz_files/figure-html/ggplot-geom-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Layer 4\n\nThe `scale_*` functions help you to customise the aesthetics.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(pets, aes(pet, score, colour = country, fill = country)) +\n  geom_violin(alpha = 0.5) +\n  scale_fill_manual(values = c(\"orange\", \"orchid\")) +\n  scale_colour_manual(values = c(\"orange\", \"orchid\"))\n```\n\n::: {.cell-output-display}\n![Customised colours.](03-dataviz_files/figure-html/ggplot-color-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Layer 5\n\nFurther customise the image by setting the y-axis breaks and limits, and editing the labels.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(pets, aes(pet, score, colour = country, fill = country)) +\n  geom_violin(alpha = 0.5) +\n  scale_fill_manual(values = c(\"orange\", \"orchid\")) +\n  scale_colour_manual(values = c(\"orange\", \"orchid\")) +\n  scale_y_continuous(breaks = c(50, 100, 150)) +\n  coord_cartesian(ylim = c(50, 150)) +\n  labs(x = \"Pet type\",\n       y = \"Score on an Important Test\",\n       colour = \"Country of Origin\",\n       fill = \"Country of Origin\")\n```\n\n::: {.cell-output-display}\n![Customised axis labels.](03-dataviz_files/figure-html/ggplot-labels-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Layer 6\n\nFinally, change the theme and base font size and customise the legend position.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(pets, aes(pet, score, colour = country, fill = country)) +\n  geom_violin(alpha = 0.5) +\n  scale_fill_manual(values = c(\"orange\", \"orchid\")) +\n  scale_colour_manual(values = c(\"orange\", \"orchid\")) +\n  scale_y_continuous(breaks = c(50, 100, 150)) +\n  coord_cartesian(ylim = c(50, 150)) +\n  labs(x = \"Pet type\",\n       y = \"Score on an Important Test\",\n       colour = \"Country of Origin\",\n       fill = \"Country of Origin\") +\n  theme_minimal(base_size = 13) +\n  theme(legend.position = c(.83, .17))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: A numeric `legend.position` argument in `theme()` was deprecated in ggplot2\n3.5.0.\nℹ Please use the `legend.position.inside` argument of `theme()` instead.\n```\n:::\n\n::: {.cell-output-display}\n![Customised theme and legend position.](03-dataviz_files/figure-html/ggplot-theme-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n:::\n\n\n\n\n\n## Which plot shall I build??? {#sec-appropriate-plot}\n\n### One catergorical variable\n\nBargraphs - from raw data\n\n\ngeom bar \n\nuse geom col if something has already been summmarised for you\n\n\nbring in layers/tabs of how to change colour etc\n\n\n\n\n\n### Two categorical variables\n\nfaceted bargraph\n\n\n### One continuous variable\n\nhistogram\n\n### One continuous and one categorical grouping variable\n\nHave one with char and one with numbers\nfactors are important\n\ndodged histogram or better facet\n\nviolin plot\n\nboxplot\n\nviolin-boxplot\n\nFor ordinal rating scale: overplotting with geom_point. Use geom_jitter instead - tab you can also change the size of the dot and the transparency\n\n### Two continuous\n\nscatterplot\n\ntrendlines straight line vs loess\n\nshow them next to each other like Lisa has\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlm_plot <- \n  ggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_point(alpha = 0.2) +\n  geom_smooth(method = lm, formula = y~x) +\n  ggtitle(\"method = lm\")\n\nloess_plot <- \n  ggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_point(alpha = 0.2) +\n  geom_smooth(method = loess, formula = y~x) +\n  ggtitle(\"method = loess\")\n\nlm_plot + loess_plot\n```\n:::\n",
    "supporting": [
      "03-dataviz_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}