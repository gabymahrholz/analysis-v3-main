dog_data_long <- read_csv("data/dog_data_clean_long.csv")
data_wemwbs <- data_ballou %>%
pivot_longer(cols = wemwbs_1:wemwbs_14, names_to = "Questions", values_to = "Scores") %>%
group_by(pid) %>%
summarise(wemwbs_sum = sum(Scores))
## I basically have to have 2 code chunks since I tell them to put the data files next to the project, and mine are in a separate folder called data - unless I'll turn this into a fixed path
library(tidyverse)
library(lsr)
library(scales)
library(qqplotr)
library(car)
library(pwr)
library(rcompanion)
data_ballou <- read_csv("data/data_ballou_reduced.csv")
data_wemwbs <- data_ballou %>%
pivot_longer(cols = wemwbs_1:wemwbs_14, names_to = "Questions", values_to = "Scores") %>%
group_by(pid) %>%
summarise(wemwbs_sum = sum(Scores))
data_ballou <- data_ballou %>%
mutate(gender = factor(gender,
levels = c("Woman", "Man", "Non-binary")),
eduLevel = factor(eduLevel,
levels = c("Completed Secondary School", "Some University but no degree", "University Bachelors Degree", "Vocational or Similar", "Graduate or professional degree (MA, MS, MBA, PhD, etc)"))) %>%
left_join(data_wemwbs)
View(data_wemwbs)
View(data_ballou)
chi_square <- data_ballou %>%
select(pid, gender, eduLevel)
View(chi_square)
View(dog_data_long)
View(dog_data_wide)
dog_chi <- dog_data_wide %>%
# Step 1
select(RID, Year_of_Study, Live_Pets)
View(dog_chi)
dog_chi <- dog_data_wide %>%
# Step 1
select(RID, Year_of_Study, Live_Pets) %>%
# Step 2
drop_na()
View(dog_chi)
dog_chi_frequency <- dog_chi %>%
count(Live_Pets, Year_of_Study)
View(dog_chi_frequency)
dog_chi_frequency <- dog_chi %>%
count(Live_Pets, Year_of_Study) %>%
pivot_wider(names_from = Live_Pets, values_from = n)
dog_chi_frequency %>%
kbl() %>%
kable_styling()
library(kableExtra)
dog_chi_frequency %>%
kbl() %>%
kable_styling()
dog_chi_df <- as.data.frame(dog_chi)
View(dog_chi_df)
associationTest(formula = ~ Year_of_Study + Live_Pets, data = dog_chi_df)
distinct(dog_chi, Year_of_Study)
# Task 4: Tidying
dog_chi <- dog_data_wide %>%
# Step 1
select(RID, Year_of_Study, Live_Pets) %>%
# Step 2
drop_na() %>%
# STep 3
mutate(Year_of_Study = factor(Year_of_Study,
levels = c("First", "Second", "Third", "Fourth", "Fifth or above")),
Live_Pets = factor(Live_Pets,
levels = c("yes", "no")))
View(dog_chi)
dog_chi_contingency <- dog_chi %>%
count(Live_Pets, Year_of_Study) %>%
pivot_wider(names_from = Live_Pets, values_from = n)
dog_chi_contingency %>%
kbl() %>%
kable_styling()
# Task 5: Frequency table
dog_chi_contingency <- dog_chi %>%
count(Live_Pets, Year_of_Study) %>%
pivot_wider(names_from = Live_Pets, values_from = n)
dog_chi_df <- as.data.frame(dog_chi)
associationTest(formula = ~ Year_of_Study + Live_Pets, data = dog_chi_df)
knitr::opts_chunk$set(echo = TRUE)
## package
library(tidyverse) # Tidyverse misspelled
processed_data <- read_csv("processed_data.csv") # 4th dataset missing
ggplot(processed_data, aes(x = sex, y = who_mean, fill = sex)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.4) +
facet_wrap(~country) +
scale_fill_brewer(palette = "Dark2",
guide = "none")
processed_data2 <- processed_data %>%
filter(sex %in% c("female", "male"))
ggplot(processed_data2, aes(x = sex, y = who_mean, fill = sex)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.4) +
facet_wrap(~country) +
scale_fill_brewer(palette = "Dark2",
guide = "none")
library(tidyverse)
dog_data_long <- read_csv("data/dog_data_clean_long.csv")
View(dog_data_long)
dog_data_wide <- read_csv("data/dog_data_clean_wide.csv")
View(dog_data_wide)
View(dog_data_wide)
count(dog_data_wide$Age_Yrs)
count(dog_data_wide, as.character(Age_Yrs))
count(dog_data_wide, Year_of_Study)
dog_two_sample <- dog_data_wide %>%
# Step 1
select(RID, Year_of_Study, Loneliness_post) %>%
# Step 2
filter(Year_of_Study %in% c("First", "Second")) %>%
# Step 3
mutate(Year_of_Study = factor(Year_of_Study))
View(dog_two_sample)
## I need dog_two_sample
dog_two_sample <- dog_data_wide %>%
# Step 1
select(RID, Year_of_Study, Loneliness_post) %>%
# Step 2
filter(Year_of_Study %in% c("First", "Second")) %>%
# Step 3
mutate(Year_of_Study = factor(Year_of_Study))
ggplot(dog_two_sample, aes(x = Year_of_Study, y = Loneliness_post)) +
geom_violin() +
geom_boxplot()
ggplot(dog_two_sample, aes(x = Year_of_Study, y = Loneliness_post, fill = Year_of_Study)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.5)
View(dog_data_wide)
View(dog_two_sample)
View(dog_data_wide)
## I need dog_two_sample
dog_two_sample <- dog_data_wide %>%
# Step 1
select(RID, Year_of_Study, Loneliness_post) %>%
# Step 2
filter(Year_of_Study %in% c("First", "Second"),
GroupAssignment %in% c("Control", "Direct")) %>%
# Step 3
mutate(Year_of_Study = factor(Year_of_Study),
GroupAssignment = factor(GroupAssignment))
## I need dog_two_sample
dog_two_sample <- dog_data_wide %>%
# Step 1
select(RID, Year_of_Study, GroupAssignment, Loneliness_post) %>%
# Step 2
filter(Year_of_Study %in% c("First", "Second"),
GroupAssignment %in% c("Control", "Direct")) %>%
# Step 3
mutate(Year_of_Study = factor(Year_of_Study),
GroupAssignment = factor(GroupAssignment))
## I need dog_two_sample
dog_two_sample <- dog_data_wide %>%
# Step 1
select(RID, Year_of_Study, GroupAssignment, Loneliness_post) %>%
# Step 2
filter(#Year_of_Study %in% c("First", "Second"),
GroupAssignment %in% c("Control", "Direct")) %>%
# Step 3
mutate(#Year_of_Study = factor(Year_of_Study),
GroupAssignment = factor(GroupAssignment))
View(dog_two_sample)
94*2
count(dog_two_sample, GroupAssignment)
ggplot(dog_two_sample, aes(x = GroupAssignment, y = Loneliness_post, fill = GroupAssignment)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.5)
## I need dog_two_sample
dog_two_sample <- dog_data_wide %>%
# Step 1
select(RID, Year_of_Study, GroupAssignment, Loneliness_pre, Loneliness_post) %>%
mutate(Loneliness_diff = Loneliness_post-Loneliness_pre) %>%
# Step 2
filter(#Year_of_Study %in% c("First", "Second"),
GroupAssignment %in% c("Control", "Direct")) %>%
# Step 3
mutate(#Year_of_Study = factor(Year_of_Study),
GroupAssignment = factor(GroupAssignment))
ggplot(dog_two_sample, aes(x = GroupAssignment, y = Loneliness_diff, fill = GroupAssignment)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.5)
## I need dog_two_sample
dog_two_sample <- dog_data_wide %>%
# Step 1
select(RID, Year_of_Study, GroupAssignment, Loneliness_pre, Loneliness_post) %>%
mutate(Loneliness_diff = Loneliness_post-Loneliness_pre) %>%
# Step 2
# filter(#Year_of_Study %in% c("First", "Second"),
#        GroupAssignment %in% c("Control", "Direct")) %>%
# Step 3
mutate(#Year_of_Study = factor(Year_of_Study),
GroupAssignment = factor(GroupAssignment))
ggplot(dog_two_sample, aes(x = GroupAssignment, y = Loneliness_diff, fill = GroupAssignment)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.5)
## I need dog_two_sample
dog_two_sample <- dog_data_wide %>%
# Step 1
select(RID, Year_of_Study, GroupAssignment, Loneliness_pre, Loneliness_post) %>%
mutate(Loneliness_diff = Loneliness_post-Loneliness_pre) %>%
# Step 2
filter(#Year_of_Study %in% c("First", "Second"),
GroupAssignment %in% c("Control", "Direct")) %>%
# Step 3
mutate(#Year_of_Study = factor(Year_of_Study),
GroupAssignment = factor(GroupAssignment))
ggplot(dog_two_sample, aes(x = GroupAssignment, y = Loneliness_diff, fill = GroupAssignment)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.5)
ggplot(dog_two_sample, aes(x = GroupAssignment, y = Loneliness_diff, fill = GroupAssignment)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.4)
## I need dog_two_sample
dog_two_sample <- dog_data_wide %>%
# Step 1
select(RID, Year_of_Study, GroupAssignment, SCS_pre, SCS_post) %>%
mutate(Loneliness_diff = SCS_post-SCS_pre) %>%
# Step 2
filter(#Year_of_Study %in% c("First", "Second"),
GroupAssignment %in% c("Control", "Direct")) %>%
# Step 3
mutate(#Year_of_Study = factor(Year_of_Study),
GroupAssignment = factor(GroupAssignment))
ggplot(dog_two_sample, aes(x = GroupAssignment, y = Loneliness_diff, fill = GroupAssignment)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.4)
## I need dog_two_sample
dog_two_sample <- dog_data_wide %>%
# Step 1
select(RID, Year_of_Study, GroupAssignment, SHS_pre, SHS_post) %>%
mutate(Loneliness_diff = SHS_post-SHS_pre) %>%
# Step 2
filter(#Year_of_Study %in% c("First", "Second"),
GroupAssignment %in% c("Control", "Direct")) %>%
# Step 3
mutate(#Year_of_Study = factor(Year_of_Study),
GroupAssignment = factor(GroupAssignment))
ggplot(dog_two_sample, aes(x = GroupAssignment, y = Loneliness_diff, fill = GroupAssignment)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.4)
## I need dog_two_sample
dog_two_sample <- dog_data_wide %>%
# Step 1
select(RID, Year_of_Study, GroupAssignment, Flourishing_pre, Flourishing_post) %>%
mutate(Loneliness_diff = Flourishing_post-Flourishing_pre) %>%
# Step 2
filter(#Year_of_Study %in% c("First", "Second"),
GroupAssignment %in% c("Control", "Direct")) %>%
# Step 3
mutate(#Year_of_Study = factor(Year_of_Study),
GroupAssignment = factor(GroupAssignment))
ggplot(dog_two_sample, aes(x = GroupAssignment, y = Loneliness_diff, fill = GroupAssignment)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.4)
## I need dog_two_sample
dog_two_sample <- dog_data_wide %>%
# Step 1
select(RID, Year_of_Study, GroupAssignment, Flourishing_pre, Flourishing_post, Loneliness_pre, Loneliness_post) %>%
mutate(Loneliness_diff = Loneliness_post-Loneliness_pre) %>%
# Step 2
filter(#Year_of_Study %in% c("First", "Second"),
GroupAssignment %in% c("Control", "Direct")) %>%
# Step 3
mutate(#Year_of_Study = factor(Year_of_Study),
GroupAssignment = factor(GroupAssignment))
ggplot(dog_two_sample, aes(x = GroupAssignment, y = Loneliness_diff, fill = GroupAssignment)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.4)
## I need dog_two_sample
dog_two_sample <- dog_data_wide %>%
# Step 1
select(RID, Year_of_Study, GroupAssignment, Flourishing_pre, Flourishing_post, Loneliness_pre, Loneliness_post) %>%
mutate(Flourishing_diff = Flourishing_post-Flourishing_pre) %>%
# Step 2
filter(#Year_of_Study %in% c("First", "Second"),
GroupAssignment %in% c("Control", "Direct")) %>%
# Step 3
mutate(#Year_of_Study = factor(Year_of_Study),
GroupAssignment = factor(GroupAssignment))
ggplot(dog_two_sample, aes(x = GroupAssignment, y = Flourishing_diff, fill = GroupAssignment)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.4)
View(dog_two_sample)
## I need dog_two_sample
dog_two_sample <- dog_data_wide %>%
# Step 1
select(RID, Year_of_Study, GroupAssignment, Flourishing_pre, Flourishing_post) %>%
mutate(Flourishing_diff = Flourishing_post-Flourishing_pre) %>%
# Step 2
filter(#Year_of_Study %in% c("First", "Second"),
GroupAssignment %in% c("Control", "Direct")) %>%
# Step 3
mutate(#Year_of_Study = factor(Year_of_Study),
GroupAssignment = factor(GroupAssignment))
## I need dog_two_sample
dog_two_sample <- dog_data_wide %>%
# Step 1
select(RID, Year_of_Study, GroupAssignment, Flourishing_pre, Flourishing_post) %>%
# Step 2
filter(GroupAssignment %in% c("Control", "Direct")) %>%
# Step 3
mutate(Flourishing_diff = Flourishing_post-Flourishing_pre) %>%
# Step 4
mutate(GroupAssignment = factor(GroupAssignment))
View(dog_two_sample)
## I need dog_two_sample
dog_two_sample <- dog_data_wide %>%
# Step 1
select(RID, Year_of_Study, GroupAssignment, Flourishing_pre, Flourishing_post) %>%
# Step 2
filter(GroupAssignment %in% c("Control", "Direct")) %>%
# Step 3
mutate(Flourishing_diff = Flourishing_post-Flourishing_pre) %>%
# Step 4
mutate(GroupAssignment = factor(GroupAssignment))
View(dog_two_sample)
## I need dog_two_sample
dog_two_sample <- dog_data_wide %>%
# Step 1
select(RID, GroupAssignment, Flourishing_pre, Flourishing_post) %>%
# Step 2
filter(GroupAssignment %in% c("Control", "Direct")) %>%
# Step 3
mutate(Flourishing_diff = Flourishing_post-Flourishing_pre) %>%
# Step 4
mutate(GroupAssignment = factor(GroupAssignment))
View(dog_two_sample)
View(dog_two_sample)
## I need dog_two_sample
dog_independent <- dog_data_wide %>%
# Step 1
select(RID, GroupAssignment, Flourishing_post) %>%
# Step 2
filter(GroupAssignment %in% c("Control", "Direct")) %>%
# Step 3
mutate(GroupAssignment = factor(GroupAssignment))
dog_data_wide <- read_csv("data/dog_data_clean_wide.csv")
## I need dog_two_sample
dog_independent <- dog_data_wide %>%
# Step 1
select(RID, GroupAssignment, Flourishing_post) %>%
# Step 2
filter(GroupAssignment %in% c("Control", "Direct")) %>%
# Step 3
mutate(GroupAssignment = factor(GroupAssignment))
dog_independent_descriptives <- dog_independent %>%
group_by(GroupAssignment) %>%
summarise(mean_Flourishing = mean(Flourishing_post),
sd_Flourishing = sd(Flourishing_post)) %>%
ungroup()
View(dog_independent_descriptives)
leveneTest(Flourishing_post ~ GroupAssignment, data = dog_independent)
library(car)
leveneTest(Flourishing_post ~ GroupAssignment, data = dog_independent)
leveneTest(Flourishing_post ~ GroupAssignment, data = dog_independent)
ggplot(dog_independent, aes(x = GroupAssignment, y = Flourishing_post)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.5)
ggplot(dog_data_wide, aes(x = GroupAssignment, y = Flourishing_post)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.5)
ggplot(dog_data_wide, aes(x = GroupAssignment, y = Loneliness_post)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.5)
View(dog_data_wide)
ggplot(dog_data_wide, aes(x = GroupAssignment, y = PANAS_PA_post)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.5)
ggplot(dog_data_wide, aes(x = GroupAssignment, y = PANAS_NA_post)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.5)
ggplot(dog_data_wide, aes(x = GroupAssignment, y = SHS_post)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.5)
ggplot(dog_data_wide, aes(x = GroupAssignment, y = SCS_post)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.5)
View(dog_data_wide)
ggplot(dog_data_wide, aes(x = GroupAssignment, y = Stress_post)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.5)
ggplot(dog_data_wide, aes(x = GroupAssignment, y = Homesickness_post)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.5)
ggplot(dog_data_wide, aes(x = GroupAssignment, y = Homesick_post)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.5)
ggplot(dog_data_wide, aes(x = GroupAssignment, y = Flourishing_post)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.5)
ggplot(dog_independent, aes(x = GroupAssignment, y = Flourishing_post)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.5)
t.test(Flourishing_post ~ GroupAssignment, data = dog_independent, var.equal = FALSE, alternative = "two.sided")
wilcox.test(Flourishing_post ~ GroupAssignment, data = dog_independent)
cohensD(Flourishing_post ~ GroupAssignment, data = dog_independent, method = "unequal")
library(lsr)
cohensD(Flourishing_post ~ GroupAssignment, data = dog_independent, method = "unequal")
ggplot(dog_independent, aes(x = GroupAssignment, y = Flourishing_post, fill = GroupAssignment)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.5) +
scale_fill_viridis_d(guide = "none") +
theme_classic() +
labs(x = "Similarity", y = "Simon effect")
ggplot(dog_independent, aes(x = GroupAssignment, y = Flourishing_post, fill = GroupAssignment)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.4) +
scale_fill_viridis_d(guide = "none") +
theme_classic() +
labs(x = "Similarity", y = "Simon effect")
ggplot(dog_independent, aes(x = GroupAssignment, y = Flourishing_post, fill = GroupAssignment)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.4) +
scale_fill_viridis_d(option = "turbo", guide = "none") +
theme_classic() +
labs(x = "Similarity", y = "Simon effect")
ggplot(dog_independent, aes(x = GroupAssignment, y = Flourishing_post, fill = GroupAssignment)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.4) +
scale_fill_viridis_d(option = "mako", guide = "none") +
theme_classic() +
labs(x = "Similarity", y = "Simon effect")
ggplot(dog_independent, aes(x = GroupAssignment, y = Flourishing_post, fill = GroupAssignment)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.4) +
scale_fill_viridis_d(option = "rocket", guide = "none") +
theme_classic() +
labs(x = "Similarity", y = "Simon effect")
ggplot(dog_independent, aes(x = GroupAssignment, y = Flourishing_post, fill = GroupAssignment)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.4) +
scale_fill_viridis_d(option = "cividis", guide = "none") +
theme_classic() +
labs(x = "Similarity", y = "Simon effect")
ggplot(dog_independent, aes(x = GroupAssignment, y = Flourishing_post, fill = GroupAssignment)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.4) +
scale_fill_viridis_d(option = "viridis", guide = "none") +
theme_classic() +
labs(x = "Similarity", y = "Simon effect")
ggplot(dog_independent, aes(x = GroupAssignment, y = Flourishing_post, fill = GroupAssignment)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.4) +
scale_fill_viridis_d(option = "plasma", guide = "none") +
theme_classic() +
labs(x = "Similarity", y = "Simon effect")
ggplot(dog_independent, aes(x = GroupAssignment, y = Flourishing_post, fill = GroupAssignment)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.4) +
scale_fill_viridis_d(option = "inferno", guide = "none") +
theme_classic() +
labs(x = "Similarity", y = "Simon effect")
ggplot(dog_independent, aes(x = GroupAssignment, y = Flourishing_post, fill = GroupAssignment)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.4) +
scale_fill_viridis_d(option = "magma", guide = "none") +
theme_classic() +
labs(x = "Similarity", y = "Simon effect")
ggplot(dog_independent, aes(x = GroupAssignment, y = Flourishing_post, fill = GroupAssignment)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.4) +
scale_fill_viridis_d(option = "cividis", guide = "none") +
theme_classic() +
labs(x = "Similarity", y = "Simon effect")
ggplot(dog_independent, aes(x = GroupAssignment, y = Flourishing_post, fill = GroupAssignment)) +
geom_violin(alpha = 0.5) +
geom_boxplot(width = 0.3) +
scale_fill_viridis_d(option = "cividis", guide = "none") +
theme_classic() +
labs(x = "Similarity", y = "Simon effect")
ggplot(dog_independent, aes(x = GroupAssignment, y = Flourishing_post, fill = GroupAssignment)) +
geom_violin(alpha = 0.4) +
geom_boxplot(width = 0.3) +
scale_fill_viridis_d(option = "cividis", guide = "none") +
theme_classic() +
labs(x = "Similarity", y = "Simon effect")
ggplot(dog_independent, aes(x = GroupAssignment, y = Flourishing_post, fill = GroupAssignment)) +
geom_violin(alpha = 0.4) +
geom_boxplot(width = 0.3, alpha = 0.8) +
scale_fill_viridis_d(option = "cividis", guide = "none") +
theme_classic() +
labs(x = "Similarity", y = "Simon effect")
ggplot(dog_independent, aes(x = GroupAssignment, y = Flourishing_post, fill = GroupAssignment)) +
geom_violin(alpha = 0.4) +
geom_boxplot(width = 0.3, alpha = 0.8) +
scale_fill_viridis_d(option = "cividis", guide = "none") +
theme_classic()
ggplot(dog_independent, aes(x = GroupAssignment, y = Flourishing_post, fill = GroupAssignment)) +
geom_violin(alpha = 0.4) +
geom_boxplot(width = 0.3, alpha = 0.8) +
scale_fill_viridis_d(option = "cividis", guide = "none") +
theme_classic() +
labs(x = "Group", y = "psychological wellbeing (post-intervention")
t.test(Flourishing_post ~ GroupAssignment, data = dog_independent, var.equal = FALSE, alternative = "two.sided")
# Task 5: Means & SD
dog_independent_descriptives <- dog_independent %>%
group_by(GroupAssignment) %>%
summarise(n = n(),
mean_Flourishing = mean(Flourishing_post),
sd_Flourishing = sd(Flourishing_post)) %>%
ungroup()
View(dog_independent_descriptives)
View(dog_independent_descriptives)
pwr.t.test(d = 0.145, sig.level = 0.05, power = 0.8, type = "two.sample", alternative = "two.sided")
library(pwr)
pwr.t.test(d = 0.145, sig.level = 0.05, power = 0.8, type = "two.sample", alternative = "two.sided")
dog_independent_descriptives
t.test(Flourishing_post ~ GroupAssignment, data = dog_independent, var.equal = FALSE, alternative = "two.sided")
cohensD(Flourishing_post ~ GroupAssignment, data = dog_independent, method = "unequal")
