labs(x = "Hours of Technology Use",
y = "Mean Well-Being Score")
ggplot(dat_means, aes(x = hours, y = mean_wellbeing, linetype = day, shape = day)) +
geom_line() +
geom_point() +
scale_shape_manual(values=c(1, 0))
ggplot(dat_means, aes(x = hours, y = mean_wellbeing, linetype = day, shape = day)) +
geom_line() +
geom_point() +
scale_shape_manual(values=c(1, 0)) +
facet_wrap(~ technology_type) +
theme_classic() +
labs(x = "Hours of Technology Use",
y = "Mean Well-Being Score")
ggplot(dat_means, aes(x = hours, y = mean_wellbeing, linetype = day, shape = day)) +
geom_line() +
geom_point() +
scale_shape_manual(values=c(15, 16)) +
facet_wrap(~ technology_type) +
theme_classic() +
labs(x = "Hours of Technology Use",
y = "Mean Well-Being Score")
ggplot(dat_means, aes(x = hours, y = mean_wellbeing, linetype = day, shape = day)) +
geom_line() +
geom_point() +
#scale_shape_manual(values=c(15, 16)) +
facet_wrap(~ technology_type) +
theme_classic() +
labs(x = "Hours of Technology Use",
y = "Mean Well-Being Score")
data_smartphone <- screen_long %>%
filter(technology_type == "Using Smartphone") %>%
group_by(Serial) %>%
summarise(average_hours = mean(hours)) %>%
filter(average_hours > 1)
data_smartphone <- screen_long %>%
# Step 1
filter(technology_type == "Using Smartphone") %>%
# Step 2
group_by(Serial) %>%
summarise(average_hours = mean(hours)) %>%
# Step 3
filter(average_hours > 1) %>%
# Step 4
inner_join(wemwbs) %>%
inner_join(demo)
View(data_smartphone)
View(screentime)
View(demo)
data_smartphone <- screentime %>%
# Step 1
select(Serial, Smart_wk, Smart_we) %>%
# Step 2 - different approach to computing averages
mutate(average_hours = (Smart_wk + Smart_we)/2) %>%
# Step 3
filter(average_hours > 1) %>%
# Step 4
inner_join(wemwbs) %>%
inner_join(demo)
View(data_smartphone)
data_smartphone <- screen_long %>%
# Step 1
filter(technology_type == "Using Smartphone") %>%
# Step 2
group_by(Serial) %>%
summarise(average_hours = mean(hours)) %>%
# Step 3
filter(average_hours > 1) %>%
# Step 4
inner_join(wemwbs) %>%
inner_join(demo)
data_smartphone2 <- screentime %>%
# Step 1
select(Serial, Smart_wk, Smart_we) %>%
# Step 2 - different approach to computing averages
mutate(average_hours = (Smart_wk + Smart_we)/2) %>%
# Step 3
filter(average_hours > 1) %>%
# Step 4
inner_join(wemwbs) %>%
inner_join(demo)
View(data_smartphone)
View(data_smartphone)
data_smartphone <- screen_long %>%
# Step 1
filter(technology_type == "Using Smartphone") %>%
# Step 2
group_by(Serial) %>%
summarise(average_hours = mean(hours)) %>%
# Step 3
filter(average_hours > 1) %>%
# Step 4
inner_join(wemwbs) %>%
inner_join(demo) %>%
# Step 5
select(Serial, WEMWBS_sum, average_hours, Gender)
data_smartphone2 <- screentime %>%
# Step 1
select(Serial, Smart_wk, Smart_we) %>%
# Step 2 - different approach to computing averages
mutate(average_hours = (Smart_wk + Smart_we)/2) %>%
# Step 3
filter(average_hours > 1) %>%
# Step 4
inner_join(wemwbs) %>%
inner_join(demo) %>%
# Step 5
select(Serial, WEMWBS_sum, average_hours, Gender)
data_smartphone <- screen_long %>%
# Step 1
filter(technology_type == "Using Smartphone") %>%
# Step 2
group_by(Serial) %>%
summarise(average_hours = mean(hours)) %>%
# Step 3
filter(average_hours > 1) %>%
# Step 4
inner_join(wemwbs) %>%
inner_join(demo) %>%
# Step 5
select(Serial, WEMWBS_sum, average_hours, Gender)
View(data_smartphone)
View(data_smartphone)
smart_wb <- smart_wb %>%
mutate(average_hours_scaled = average_hours - mean(average_hours),
gender_scaled = case_match( Gender,
"Male"  ~ .5,
"Female or unknown" ~ -.5),
gender_scaled = as.factor(gender_scaled))
data_smartphone <- data_smartphone %>%
mutate(average_hours_scaled = average_hours - mean(average_hours),
gender_scaled = case_match( Gender,
"Male"  ~ .5,
"Female or unknown" ~ -.5),
gender_scaled = as.factor(gender_scaled))
View(data_smartphone)
data_smartphone <- data_smartphone %>%
mutate(average_hours_scaled = average_hours - mean(average_hours),
#alternative:
average_hours_scaled2 = scale(average_hours),
gender_scaled = case_match( Gender,
"Male"  ~ .5,
"Female or unknown" ~ -.5),
gender_scaled = as.factor(gender_scaled))
data_smartphone <- data_smartphone %>%
mutate(average_hours_scaled = average_hours - mean(average_hours),
#alternative:
average_hours_scaled2 = scale(average_hours, scale = "false"),
gender_scaled = case_match( Gender,
"Male"  ~ .5,
"Female or unknown" ~ -.5),
gender_scaled = as.factor(gender_scaled))
data_smartphone <- data_smartphone %>%
mutate(average_hours_scaled = average_hours - mean(average_hours),
#alternative:
average_hours_scaled2 = scale(average_hours, scale = FALSE),
gender_scaled = case_match( Gender,
"Male"  ~ .5,
"Female or unknown" ~ -.5),
gender_scaled = as.factor(gender_scaled))
data_smartphone <- data_smartphone %>%
mutate(average_hours_centered = average_hours - mean(average_hours),
#alternative:
average_hours_scaled = scale(average_hours, scale = FALSE),
gender_scaled = case_match( Gender,
"Male"  ~ .5,
"Female or unknown" ~ -.5),
gender_scaled = as.factor(gender_scaled))
data_smartphone <- screentime %>%
# Step 1
select(Serial, Smart_wk, Smart_we) %>%
# Step 2 - different approach to computing averages
mutate(average_hours = (Smart_wk + Smart_we)/2) %>%
# Step 3
filter(average_hours > 1) %>%
# Step 4
inner_join(wemwbs) %>%
inner_join(demo) %>%
# Step 5
select(Serial, WEMWBS_sum, average_hours, Gender)
data_smartphone <- screentime %>%
# Step 1
select(Serial, Smart_wk, Smart_we) %>%
# Step 2 - different approach to computing averages
mutate(average_hours = (Smart_wk + Smart_we)/2) %>%
# Step 3
filter(average_hours > 1) %>%
# Step 4
inner_join(wemwbs) %>%
inner_join(demo) %>%
# Step 5
select(Serial, WEMWBS_sum, average_hours, Gender)
View(data_smartphone)
data_smartphone <- data_smartphone %>%
mutate(average_hours_centered = average_hours - mean(average_hours),
#alternative with the scale function:
#average_hours_centered = scale(average_hours, scale = FALSE),
gender_recoded = case_match(Gender,
"Male"  ~ .5,
"Female or unknown" ~ -.5),
gender_recoded = as.factor(gender_recoded))
View(data_smartphone)
mod <- lm(formula = WEMWBS ~ average_hours_centred * gender_recoded,
data = data_smartphone)
mod <- lm(formula = WEMWBS_sum ~ average_hours_centred * gender_recoded,
data = data_smartphone)
View(data_smartphone)
mod <- lm(formula = WEMWBS_sum ~ average_hours_centered * gender_recoded,
data = data_smartphone)
summary(mod)
install.packages(sjPlot)
install.packages("sjPlot")
library(sjPlot)
plot_model(mod,
type = "pred",
terms = c("average_hours_centered", "gender_recoded"))
plot_model(mod,
type = "pred",
terms = c("average_hours_centered", "gender_recoded")) +
labs(x = "Total Hours Smartphone Use",
y = "Total Well-Being Score",
title = "") +
theme_classic()
plot(mod, which = 3)
check_model(mod,
check = c("vif",
"qq",
"normality",
"linearity",
"homogeneity"))
assumptions <- check_model(mod,
check = c("vif",
"qq",
"normality",
"linearity",
"homogeneity"))
assumptions
check_collinearity(mod)
confint(mod)
## model
mod <- lm(formula = WEMWBS_sum ~ average_hours_centered * gender_recoded,
data = data_smartphone)
## regression output
summary(mod)
## confidence intervals
confint(mod)
## effect size
r_sq_adj <- summary(mod)$adj.r.squared
f_2 <- r_sq_adj/(1-r_sq_adj)
f2
f_2
## model
mod <- lm(formula = WEMWBS_sum ~ average_hours_centered * gender_recoded,
data = data_smartphone)
## regression output
summary(mod)
## confidence intervals
confint(mod)
## effect size
r_sq_adj <- summary(mod)$adj.r.squared
f_2 <- r_sq_adj/(1-r_sq_adj)
f_2
71033-3-1
pwr.f2.test(u = 3, v = 71029, sig.level = 0.05, power = 0.99)
confint(mod)
## model
mod <- lm(formula = WEMWBS_sum ~ average_hours_centered * Gender,
data = data_smartphone)
## regression output
summary(mod)
data_smartphone <- data_smartphone %>%
mutate(average_hours_centered = average_hours - mean(average_hours),
#alternative with the scale function:
#average_hours_centered = scale(average_hours, scale = FALSE),
gender_recoded = case_match(Gender,
"Male"  ~ 1,
"Female or unknown" ~ 0),
gender_recoded = as.factor(gender_recoded))
## model
mod <- lm(formula = WEMWBS_sum ~ average_hours_centered * gender_recoded,
data = data_smartphone)
## regression output
summary(mod)
View(data_smartphone)
data_smartphone <- data_smartphone %>%
mutate(average_hours_centered = average_hours - mean(average_hours),
#alternative with the scale function:
#average_hours_centered = scale(average_hours, scale = FALSE),
gender_recoded = case_match(Gender,
"Male"  ~ .5,
"Female or unknown" ~ -.5),
gender_recoded = as.factor(gender_recoded))
data_smartphone <- data_smartphone %>%
mutate(average_hours_centered = average_hours - mean(average_hours),
#alternative with the scale function:
#average_hours_centered = scale(average_hours, scale = FALSE),
gender_recoded = case_match(Gender,
"Male"  ~ .5,
"Female or unknown" ~ -.5),
gender_dummy = case_match(Gender,
"Male"  ~ 1
"Female or unknown" ~ 0),
data_smartphone <- data_smartphone %>%
mutate(average_hours_centered = average_hours - mean(average_hours),
#alternative with the scale function:
#average_hours_centered = scale(average_hours, scale = FALSE),
gender_recoded = case_match(Gender,
"Male"  ~ .5,
"Female or unknown" ~ -.5),
gender_dummy = case_match(Gender,
"Male"  ~ 1,
"Female or unknown" ~ 0),
gender_recoded = as.factor(gender_recoded),
gender_dummy = as.factor(gender_dummy))
View(data_smartphone)
## model
mod <- lm(formula = WEMWBS_sum ~ average_hours_centered * gender_recoded,
data = data_smartphone)
mod2 <- lm(formula = WEMWBS_sum ~ average_hours_centered * gender_dummy,
data = data_smartphone)
## regression output
summary(mod)
summary(mod2)
summary(mod)
summary(mod2)
summary(mod)
summary(mod2)
contrasts(data_smartphone$gender_recoded)
contrasts(data_smartphone$gender_dummy)
## I basically have to have 2 code chunks since I tell them to put the data files next to the project, and mine are in a separate folder called data - unless I'll turn this into a fixed path
library(tidyverse)
library(sjPlot)
library(performance)
library(pwr)
demo <- read_csv("data/Przybylski_2017_demographics.csv")
screentime <- read_csv("data/Przybylski_2017_screentime.csv")
wellbeing <- read_csv("data/Przybylski_2017_wellbeing.csv")
wemwbs <- wellbeing %>%
pivot_longer(cols = starts_with("WB"), # -Serial or WBOptimf:WBCheer also work
names_to = "Qs",
values_to = "Score") %>%
group_by(Serial) %>%
summarise(WEMWBS_sum = sum(Score)) %>%
ungroup()
wemwbs %>%
summarise(mean = mean(WEMWBS_sum),
sd = sd(WEMWBS_sum),
min = min(WEMWBS_sum),
max = max(WEMWBS_sum))
screentime %>%
summarise(smart_weekday_mean = mean(Smart_wk),
smart_weekday_sd = sd(Smart_wk),
smart_weekend_mean = mean(Smart_we),
smart_weekend_sd = sd(Smart_we))
screen_long <- screentime %>%
# Step 1: Pivot into long format
pivot_longer(cols = -Serial, names_to = "headings", values_to = "hours") %>%
# Step 2: `separate()`
separate(col = headings, into = c("technology_type", "day"), sep = "_") %>%
# Step 3: Recode the values
mutate(technology_type = case_match(technology_type,
"Watch" ~ "Watching TV",
"Comp" ~ "Playing Video Games",
"Comph" ~ "Using Computers",
"Smart" ~ "Using Smartphone"),
day = case_match(day,
"wk" ~ "Weekdays",
"we" ~ "Weekends"))
dat_means <- inner_join(wemwbs, screen_long, by = "Serial") %>% # Step 4: joining
# Step 5: group_by & summarise
group_by(technology_type, day, hours) %>%
summarise(mean_wellbeing = mean(WEMWBS_sum))
ggplot(dat_means, aes(x = hours, y = mean_wellbeing, linetype = day, shape = day)) +
geom_line() +
geom_point() +
scale_shape_manual(values=c(15, 16)) +
facet_wrap(~ technology_type) +
theme_classic() +
labs(x = "Hours of Technology Use",
y = "Mean Well-Being Score")
data_smartphone <- screen_long %>%
# Step 1
filter(technology_type == "Using Smartphone") %>%
# Step 2
group_by(Serial) %>%
summarise(average_hours = mean(hours)) %>%
# Step 3
filter(average_hours > 1) %>%
# Step 4
inner_join(wemwbs) %>%
inner_join(demo) %>%
# Step 5
select(Serial, WEMWBS_sum, average_hours, Gender)
data_smartphone <- screentime %>%
# Step 1
select(Serial, Smart_wk, Smart_we) %>%
# Step 2 - different approach to computing averages
mutate(average_hours = (Smart_wk + Smart_we)/2) %>%
# Step 3
filter(average_hours > 1) %>%
# Step 4
inner_join(wemwbs) %>%
inner_join(demo) %>%
# Step 5
select(Serial, WEMWBS_sum, average_hours, Gender)
data_smartphone <- data_smartphone %>%
mutate(average_hours_centered = average_hours - mean(average_hours),
#alternative with the scale function:
#average_hours_centered = scale(average_hours, scale = FALSE),
gender_recoded = case_match(Gender,
"Male"  ~ .5,
"Female or unknown" ~ -.5),
gender_recoded = as.factor(gender_recoded))
## model
mod <- lm(formula = WEMWBS_sum ~ average_hours_centered * gender_recoded,
data = data_smartphone)
View(data_smartphone)
## regression output
summary(mod)
table(data_smartphone$gender_recoded)
data_smartphone <- data_smartphone %>%
mutate(average_hours_centered = average_hours - mean(average_hours),
#alternative with the scale function:
#average_hours_centered = scale(average_hours, scale = FALSE),
gender_recoded = factor(case_match(Gender,
"Male"  ~ 0.5,
"Female or unknown" ~ -0.5),
levels = c(-0.5, 0.5)))
## model
mod <- lm(formula = WEMWBS_sum ~ average_hours_centered * gender_recoded,
data = data_smartphone)
## regression output
summary(mod)
data_smartphone <- data_smartphone %>%
mutate(average_hours_centered = average_hours - mean(average_hours),
#alternative with the scale function:
#average_hours_centered = scale(average_hours, scale = FALSE),
gender_recoded = case_match(Gender,
"Male"  ~ 0.5,
"Female or unknown" ~ -0.5),
gender_recoded = factor(gender_recoded, levels = c(-0.5, 0.5)))
View(data_smartphone)
## model
mod <- lm(formula = WEMWBS_sum ~ average_hours_centered * gender_recoded,
data = data_smartphone)
## regression output
summary(mod)
contrasts(data_smartphone$gender_recoded)
contrasts(data_smartphone$gender_recoded) <- contr.sum(2) / 2
contrasts(data_smartphone$gender_recoded)
## model
mod <- lm(formula = WEMWBS_sum ~ average_hours_centered * gender_recoded,
data = data_smartphone)
## regression output
summary(mod)
contrasts(data_smartphone$Gender) <- contr.sum(2) / 2
data_smartphone <- data_smartphone %>%
mutate(average_hours_centered = average_hours - mean(average_hours),
#alternative with the scale function:
#average_hours_centered = scale(average_hours, scale = FALSE),
gender_recoded = case_match(Gender,
"Male"  ~ 0.5,
"Female or unknown" ~ -0.5),
gender_recoded = factor(gender_recoded),
Gender = factor(Gender))
contrasts(data_smartphone$Gender)
contrasts(data_smartphone$Gender) <- contr.sum(2) / 2
contrasts(data_smartphone$Gender)
## model
mod <- lm(formula = WEMWBS_sum ~ average_hours_centered * gender_recoded,
data = data_smartphone)
## regression output
summary(mod)
## model
mod <- lm(formula = WEMWBS_sum ~ average_hours_centered * Gender,
data = data_smartphone)
## regression output
summary(mod)
data_smartphone <- screentime %>%
# Step 1
select(Serial, Smart_wk, Smart_we) %>%
# Step 2 - different approach to computing averages
mutate(average_hours = (Smart_wk + Smart_we)/2) %>%
# Step 3
filter(average_hours > 1) %>%
# Step 4
inner_join(wemwbs) %>%
inner_join(demo) %>%
# Step 5
select(Serial, WEMWBS_sum, average_hours, Gender)
data_smartphone <- data_smartphone %>%
mutate(average_hours_centered = average_hours - mean(average_hours),
#alternative with the scale function:
#average_hours_centered = scale(average_hours, scale = FALSE),
gender_recoded = case_match(Gender,
"Male"  ~ 0.5,
"Female or unknown" ~ -0.5),
gender_recoded = factor(gender_recoded),
Gender = factor(Gender))
## model
mod <- lm(formula = WEMWBS_sum ~ average_hours_centered * gender_recoded,
data = data_smartphone)
## regression output
summary(mod)
confint(mod)
contr.treatment(2)
contr.sum(2)
contrasts(data_smartphone$Gender)
contrasts(data_smartphone$Gender) <- contr.sum(2)
contrasts(data_smartphone$Gender)
contrasts(data_smartphone$Gender) <- contr.sum(2)/2
contrasts(data_smartphone$Gender)
