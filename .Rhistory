scale_fill_viridis_d(
# remove the legend
guide = "none") +
labs(x = "Gender")
ggplot(gender_count, aes(x = gender, y = n, fill = gender)) +
geom_col() +
scale_fill_viridis_d(
# remove the legend
guide = "none") +
labs(x = "Gender") +
scale_y_continuous(
name = "Count",
expand = expansion(mult = c(0, 0.05))
) +
theme_minimal()
Fruit <- c(rep("Apple",3),rep("Orange",5))
Bug <- c("worm","spider","spider","worm","worm","worm","worm","spider")
df <- data.frame(Fruit,Bug)
View(df)
rm(df, Fruit, Bug)
View(hp_data)
ggplot(hp_data, aes(x = gender, fill = Sorting_completed_YN))
ggplot(hp_data, aes(x = gender, fill = Sorting_completed_YN)) +
geom_bar()
ggplot(hp_data, aes(x = gender, fill = Sorting_completed_YN)) +
geom_bar() # you can also add `position = "stack"` in this argument. It would produce the same plot
ggplot(hp_data, aes(x = gender, fill = Sorting_completed_YN)) +
geom_bar(position = "fill")
ggplot(hp_data, aes(x = gender, fill = Sorting_completed_YN)) +
geom_bar(position = "dodge")
ggplot(hp_data, aes(x = gender, fill = Sorting_completed_YN)) +
geom_bar(position = "dodge") +
scale_fill_viridis_d(
# remove the legend
guide = "none") +
labs(x = "Gender") +
scale_y_continuous(
name = "Count",
expand = expansion(mult = c(0, 0.05))
) +
theme_minimal()
ggplot(hp_data, aes(x = gender, fill = Sorting_completed_YN)) +
geom_bar(position = "dodge") +
scale_fill_viridis_d() +
labs(x = "Gender") +
scale_y_continuous(
name = "Count",
expand = expansion(mult = c(0, 0.05))
) +
theme_minimal()
ggplot(hp_data, aes(x = gender, fill = Sorting_completed_YN)) +
geom_bar(position = "dodge") +
scale_fill_viridis_d() +
labs(x = "Gender", fill = "Sorting Completed") +
scale_y_continuous(
name = "Count",
expand = expansion(mult = c(0, 0.05))
) +
theme_minimal()
ggplot(hp_data, aes(x = gender, fill = Sorting_completed_YN)) +
geom_bar(position = "dodge") +
# changing response categories
scale_fill_viridis_d(
labels = c("Not Yet Sorted", "Sorted")
) +
labs(x = "Gender", fill = "Sorting Completed") +
scale_y_continuous(
name = "Count",
expand = expansion(mult = c(0, 0.05))
) +
theme_minimal()
ggplot(hp_data, aes(x = gender, fill = Sorting_completed_YN)) +
geom_bar(position = "dodge") +
# changing fill variable responses
scale_fill_viridis_d(
labels = c("Not Yet Sorted", "Sorted")
) +
# changing labels for x, y, and fill
labs(x = "Gender", y = "Count", fill = "Sorting Completed") +
scale_y_continuous(
expand = expansion(mult = c(0, 0.05))
) +
theme_minimal()
ggplot(hp_data, aes(x = gender, fill = Sorting_completed_YN)) +
geom_bar(position = "dodge", alpha = 0.8) +
# changing colour scheme to viridis
scale_fill_viridis_d(
# changing fill variable responses
labels = c("Not Yet Sorted", "Sorted")
) +
# changing labels for x, y, and fill
labs(x = "Gender", y = "Count", fill = "Sorting Completed") +
scale_y_continuous(
# remove the space below the bars, but keep a tiny bit (5%) above
expand = expansion(mult = c(0, 0.05))
) +
# pick a theme
theme_minimal()
View(hp_data)
ggplot(hp_data, aes(x = gender, fill = Sorting_completed_YN)) +
geom_bar(position = "dodge") +
# changing colour scheme to viridis
scale_fill_viridis_d(
# changing fill variable responses
labels = c("Not Yet Sorted", "Sorted")
) +
# changing labels for x, y, and fill
labs(x = "Gender", y = "Count", fill = "Sorting Completed") +
scale_y_continuous(
# remove the space below the bars, but keep a tiny bit (5%) above
expand = expansion(mult = c(0, 0.05))
) +
# pick a theme
theme_minimal()
ggplot(hp_data, aes(x = age)) +
geom_histogram()
ggplot(hp_data, aes(x = age)) +
geom_histogram(bin = 10)
ggplot(hp_data, aes(x = age)) +
geom_histogram(bins = 10)
ggplot(hp_data, aes(x = age)) +
geom_histogram(bins = 200)
ggplot(hp_data, aes(x = age)) +
geom_histogram(binwidth = 1)
View(hp_data)
ggplot(hp_data, aes(x = age)) +
geom_histogram()
ggplot(hp_data, aes(x = age)) +
geom_histogram(binwidth = 1)
ggplot(hp_data, aes(x = age)) +
geom_histogram(bins = 10)
ggplot(hp_data, aes(x = age)) +
geom_histogram(binwidth = 1)
bins_manipulation <-
ggplot(hp_data, aes(x = age)) +
geom_histogram(bins = 10)
binwidth_manipulation <-
ggplot(hp_data, aes(x = age)) +
geom_histogram(binwidth = 1)
# add plots together in 1 row
bins_manipulation + binwidth_manipulation + plot_layout(nrow = 1)
# install.packages("devtools")
devtools::install_github("thomasp85/patchwork")
library(patchwork)
bins_manipulation <-
ggplot(hp_data, aes(x = age)) +
geom_histogram(bins = 10)
binwidth_manipulation <-
ggplot(hp_data, aes(x = age)) +
geom_histogram(binwidth = 1)
# add plots together in 1 row
bins_manipulation + binwidth_manipulation + plot_layout(nrow = 1)
# more advanced version of a grouped barchart
ggplot(hp_data, aes(x = gender, fill = Sorting_completed_YN)) +
geom_bar(position = "dodge") +
# changing colour scheme to viridis
scale_fill_viridis_d(
# changing fill variable responses
labels = c("Not Yet Sorted", "Sorted")
) +
# changing labels for x, y, and fill
labs(x = "Gender", y = "Count", fill = "Sorting Completed") +
scale_y_continuous(
# remove the space below the bars, but keep a tiny bit (5%) above
expand = expansion(mult = c(0, 0.05))
) +
# pick a theme
theme_minimal() +
# move legend to top right corner of the chart
theme(legend.position = c(.95, .95))
# more advanced version of a grouped barchart
ggplot(hp_data, aes(x = gender, fill = Sorting_completed_YN)) +
geom_bar(position = "dodge") +
# changing colour scheme to viridis
scale_fill_viridis_d(
# changing fill variable responses
labels = c("Not Yet Sorted", "Sorted")
) +
# changing labels for x, y, and fill
labs(x = "Gender", y = "Count", fill = "Sorting Completed") +
scale_y_continuous(
# remove the space below the bars, but keep a tiny bit (5%) above
expand = expansion(mult = c(0, 0.05))
) +
# pick a theme
theme_minimal() +
# move legend to top right corner of the chart
theme(legend.position = c(.85, .85))
gbchart_base + gbcart_adv + plot_layout(now = 1)
# base version of a grouped barchart
gbchart_base <- ggplot(hp_data, aes(x = gender, fill = Sorting_completed_YN)) +
geom_bar(position = "dodge") +
# legend moved below the plot (left and top are also possible)
theme(legend.position = "bottom")
# more advanced version of a grouped barchart
gbcart_adv <- ggplot(hp_data, aes(x = gender, fill = Sorting_completed_YN)) +
geom_bar(position = "dodge") +
# changing colour scheme to viridis
scale_fill_viridis_d(
# changing fill variable responses
labels = c("Not Yet Sorted", "Sorted")
) +
# changing labels for x, y, and fill
labs(x = "Gender", y = "Count", fill = "Sorting Completed") +
scale_y_continuous(
# remove the space below the bars, but keep a tiny bit (5%) above
expand = expansion(mult = c(0, 0.05))
) +
# pick a theme
theme_minimal() +
# move legend to top right corner of the chart
theme(legend.position = c(.85, .85))
gbchart_base + gbcart_adv + plot_layout(now = 1)
gbchart_base + gbcart_adv + plot_layout(nrow = 1)
ggplot(hp_data, aes(x = gender, fill = Sorting_completed_YN)) +
geom_bar(position = "dodge") +
# changing colour scheme to viridis
scale_fill_viridis_d(
# changing fill variable responses
labels = c("Not Yet Sorted", "Sorted")
) +
# changing labels for x, y, and fill
labs(x = "Gender", y = "Count", fill = "Sorting Completed") +
scale_y_continuous(
# remove the space below the bars, but keep a tiny bit (5%) above
expand = expansion(mult = c(0, 0.05))
) +
# pick a theme
theme_minimal() +
# move legend to top right corner of the chart
theme(legend.position.inside = c(.85, .85))
ggplot(hp_data, aes(x = gender, fill = Sorting_completed_YN)) +
geom_bar(position = "dodge") +
# changing colour scheme to viridis
scale_fill_viridis_d(
# changing fill variable responses
labels = c("Not Yet Sorted", "Sorted")
) +
# changing labels for x, y, and fill
labs(x = "Gender", y = "Count", fill = "Sorting Completed") +
scale_y_continuous(
# remove the space below the bars, but keep a tiny bit (5%) above
expand = expansion(mult = c(0, 0.05))
) +
# pick a theme
theme_minimal() +
# move legend to top right corner of the chart
theme(legend.position.inside = c(0.85, 0.85))
ggplot(hp_data, aes(x = gender, fill = Sorting_completed_YN)) +
geom_bar(position = "dodge") +
# changing colour scheme to viridis
scale_fill_viridis_d(
# changing fill variable responses
labels = c("Not Yet Sorted", "Sorted")
) +
# changing labels for x, y, and fill
labs(x = "Gender", y = "Count", fill = "Sorting Completed") +
scale_y_continuous(
# remove the space below the bars, but keep a tiny bit (5%) above
expand = expansion(mult = c(0, 0.05))
) +
# pick a theme
theme_minimal() +
# move legend to top right corner of the chart
theme(legend.position.inside = c(0.7, 0.7))
ggplot(hp_data, aes(x = gender, fill = Sorting_completed_YN)) +
geom_bar(position = "dodge") +
# changing colour scheme to viridis
scale_fill_viridis_d(
# changing fill variable responses
labels = c("Not Yet Sorted", "Sorted")
) +
# changing labels for x, y, and fill
labs(x = "Gender", y = "Count", fill = "Sorting Completed") +
scale_y_continuous(
# remove the space below the bars, but keep a tiny bit (5%) above
expand = expansion(mult = c(0, 0.05))
) +
# pick a theme
theme_minimal()
install.packages("palmerpenguins")
library(palmerpenguins)
penguins
penguins_raw
head(penguins)
ggplot(data = penguins, mapping = aes(x=body_mass_g, y=flipper_length_mm))
ggplot(penguins, aes(body_mass_g, flipper_length_mm))
ggplot(data = penguins, mapping = aes(x=body_mass_g, y=flipper_length_mm)) +
geom_point()
ggplot(data = penguins, mapping = aes(x=body_mass_g, y=flipper_length_mm, colour=species)) +
geom_point()
arrange(penguins, body_mass_g)
ggplot(data = penguins, mapping = aes(x=body_mass_g, y=flipper_length_mm, colour=species)) +
geom_point() +
# changes colour palette
scale_colour_brewer(palette = "Dark2") +
# add breaks from 0 to 20000 in increasing steps of 2000
scale_x_continuous(breaks = seq(from = 2500, to = 7000, by = 500))
arrange(penguins, desc(body_mass_g))
ggplot(data = penguins, mapping = aes(x=body_mass_g, y=flipper_length_mm, colour=species)) +
geom_point() +
# changes colour palette
scale_colour_brewer(palette = "Dark2") +
# add breaks from 0 to 20000 in increasing steps of 2000
scale_x_continuous(breaks = seq(from = 2500, to = 6500, by = 500))
ggplot(data = penguins, mapping = aes(x=body_mass_g, y=flipper_length_mm, colour=species)) +
geom_point() +
scale_colour_brewer(palette = "Dark2") +
facet_wrap(~ clarity) # split main plot up into different subplots by clarity
ggplot(data = penguins, mapping = aes(x=body_mass_g, y=flipper_length_mm, colour=species)) +
geom_point() +
scale_colour_brewer(palette = "Dark2") +
facet_wrap(~ Species) # split main plot up into different subplots by clarity
ggplot(data = penguins, mapping = aes(x=body_mass_g, y=flipper_length_mm, colour=species)) +
geom_point() +
scale_colour_brewer(palette = "Dark2") +
facet_wrap(~ species) # split main plot up into different subplots by clarity
ggplot(data = penguins, mapping = aes(x=body_mass_g, y=flipper_length_mm, colour=species)) +
geom_point() +
scale_colour_brewer(palette = "Dark2") +
facet_wrap(~ sex) # split main plot up into different subplots by clarity
ggplot(data = penguins, mapping = aes(x=body_mass_g, y=flipper_length_mm, colour=sex)) +
geom_point() +
scale_colour_brewer(palette = "Dark2") +
facet_wrap(~ species) # split main plot up into different subplots by clarity
ggplot(data = penguins, mapping = aes(x=body_mass_g, y=flipper_length_mm, colour=sex)) +
geom_point()
ggplot(data = penguins, mapping = aes(x=body_mass_g, y=flipper_length_mm, colour=sex)) +
geom_point() +
# changes colour palette
scale_colour_brewer(palette = "Dark2") +
# add breaks from 0 to 20000 in increasing steps of 2000
scale_x_continuous(breaks = seq(from = 2500, to = 6500, by = 500))
ggplot(data = penguins, mapping = aes(x=body_mass_g, y=flipper_length_mm, colour=sex)) +
geom_point() +
scale_colour_brewer(palette = "Dark2") +
facet_wrap(~ clarity) +
# limits the range of the y axis
coord_cartesian(ylim = c(0, 250))
ggplot(data = penguins, mapping = aes(x=body_mass_g, y=flipper_length_mm, colour=sex)) +
geom_point() +
scale_colour_brewer(palette = "Dark2") +
facet_wrap(~ species) +
# limits the range of the y axis
coord_cartesian(ylim = c(0, 250))
ggplot(data = penguins, mapping = aes(x=body_mass_g, y=flipper_length_mm, colour=sex)) +
geom_point() +
scale_colour_brewer(palette = "Dark2") +
facet_wrap(~ clarity) +
labs(x = "Body Mass (in g)", # labels the x axis
y = "Flipper length (in mm)", # labels the y axis
colour = "Sex") # labels the grouping variable in the legend
ggplot(data = penguins, mapping = aes(x=body_mass_g, y=flipper_length_mm, colour=sex)) +
geom_point() +
scale_colour_brewer(palette = "Dark2") +
facet_wrap(~ sex) +
labs(x = "Body Mass (in g)", # labels the x axis
y = "Flipper length (in mm)", # labels the y axis
colour = "Sex") # labels the grouping variable in the legend
ggplot(data = penguins, mapping = aes(x=body_mass_g, y=flipper_length_mm, colour=sex)) +
geom_point() +
scale_colour_brewer(palette = "Dark2") +
facet_wrap(~ species) +
labs(x = "Body Mass (in g)", # labels the x axis
y = "Flipper length (in mm)", # labels the y axis
colour = "Sex") # labels the grouping variable in the legend
ggplot(data = penguins, mapping = aes(x=body_mass_g, y=flipper_length_mm, colour=sex)) +
geom_point() +
scale_colour_brewer(palette = "Dark2") +
facet_wrap(~ sex) +
coord_cartesian(ylim = c(0, 2.5)) +
labs(x = "Body Mass (in g)",
y = "Flipper length (in mm)",
colour = "Sex") +
# add a theme
theme_classic()
ggplot(data = penguins, mapping = aes(x=body_mass_g, y=flipper_length_mm, colour=sex)) +
geom_point() +
scale_colour_brewer(palette = "Dark2") +
facet_wrap(~ sex) +
coord_cartesian(ylim = c(0, 2.5)) +
labs(x = "Body Mass (in g)",
y = "Flipper length (in mm)",
colour = "Sex")
ggplot(data = penguins, mapping = aes(x=body_mass_g, y=flipper_length_mm, colour=sex)) +
geom_point() +
scale_colour_brewer(palette = "Dark2") +
facet_wrap(~ sex) +
labs(x = "Body Mass (in g)",
y = "Flipper length (in mm)",
colour = "Sex") +
# add a theme
theme_classic()
ggplot(data = penguins, mapping = aes(x=body_mass_g, y=flipper_length_mm, colour=sex)) +
geom_point() +
scale_colour_brewer(palette = "Dark2") +
facet_wrap(~ species) +
labs(x = "Body Mass (in g)",
y = "Flipper length (in mm)",
colour = "Sex") +
# add a theme
theme_classic()
display.brewer.all()
ggplot(gender_count, aes(x = gender, y = n, fill = gender)) +
geom_col() +
# replaced vidiris with the brewer palette
scale_fill_brewer(
palette = "Set1"
guide = "none") +
ggplot(gender_count, aes(x = gender, y = n, fill = gender)) +
geom_col() +
# replaced vidiris with the brewer palette
scale_fill_brewer(
palette = "Set1",
guide = "none") +
labs(x = "Gender") +
scale_y_continuous(
name = "Count",
expand = expansion(mult = c(0, 0.05))
) +
theme_light()
ggplot(gender_count, aes(x = gender, y = n, fill = gender)) +
geom_col() +
# replaced vidiris with the brewer palette
scale_fill_brewer(
palette = "spectral",
guide = "none") +
labs(x = "Gender") +
scale_y_continuous(
name = "Count",
expand = expansion(mult = c(0, 0.05))
) +
# different theme
theme_light()
ggplot(gender_count, aes(x = gender, y = n, fill = gender)) +
geom_col() +
# replaced vidiris with the brewer palette
scale_fill_brewer(
palette = "PRGn",
guide = "none") +
labs(x = "Gender") +
scale_y_continuous(
name = "Count",
expand = expansion(mult = c(0, 0.05))
) +
# different theme
theme_light()
ggplot(gender_count, aes(x = gender, y = n, fill = gender)) +
geom_col() +
# replaced vidiris with the brewer palette
scale_fill_brewer(
palette = "Oranges",
guide = "none") +
labs(x = "Gender") +
scale_y_continuous(
name = "Count",
expand = expansion(mult = c(0, 0.05))
) +
# different theme
theme_light()
ggplot(gender_count, aes(x = gender, y = n, fill = gender)) +
geom_col() +
# replaced vidiris with the brewer palette
scale_fill_brewer(
palette = "Paired",
guide = "none") +
labs(x = "Gender") +
scale_y_continuous(
name = "Count",
expand = expansion(mult = c(0, 0.05))
) +
# different theme
theme_light()
ggplot(gender_count, aes(x = gender, y = n, fill = gender)) +
geom_col() +
# replaced vidiris with the brewer palette
scale_fill_brewer(
palette = "Accent",
guide = "none") +
labs(x = "Gender") +
scale_y_continuous(
name = "Count",
expand = expansion(mult = c(0, 0.05))
) +
# different theme
theme_light()
ggplot(gender_count, aes(x = gender, y = n, fill = gender)) +
geom_col() +
# replaced vidiris with the brewer palette
scale_fill_brewer(
palette = "Set2",
guide = "none") +
labs(x = "Gender") +
scale_y_continuous(
name = "Count",
expand = expansion(mult = c(0, 0.05))
) +
# different theme
theme_light()
ggplot(gender_count, aes(x = gender, y = n, fill = gender)) +
geom_col() +
# replaced vidiris with the brewer palette
scale_fill_brewer(
palette = "Set1",
guide = "none") +
labs(x = "Gender") +
scale_y_continuous(
name = "Count",
expand = expansion(mult = c(0, 0.05))
) +
# different theme
theme_light()
